# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NQ_DKgENfgKqtIFDWJNPz1K-s9uL6iZk
"""

!pip install pyngrok streamlit --quiet

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# import plotly.express as px
# 
# st.set_page_config(page_title="CityAI – Complaint Analyzer", layout="wide")
# st.title("📢 NYC 311 Complaint Analyzer")
# 
# # Load data
# df = pd.read_csv("cleaned_data.csv")
# 
# # Map to categories
# category_map = {
#     "Noise - Street/Sidewalk": "Noise",
#     "Noise - Commercial": "Noise",
#     "Noise - Residential": "Noise",
#     "Noise": "Noise",
#     "Loud Music/Party": "Noise",
#     "HEAT/HOT WATER": "Sanitation",
#     "Water System": "Water",
#     "Plumbing": "Water",
#     "Dirty Conditions": "Sanitation",
#     "Rodent": "Sanitation",
#     "Street Condition": "Road",
#     "Broken Muni Meter": "Road",
#     "Illegal Parking": "Transport",
#     "Abandoned Vehicle": "Transport",
# }
# df["label"] = df["Complaint Type"].map(category_map)
# df.dropna(subset=["label"], inplace=True)
# 
# # Convert date column
# df["Created Date"] = pd.to_datetime(df["Created Date"], errors="coerce")
# df.dropna(subset=["Created Date"], inplace=True)
# 
# # ─── Sidebar Filters ─────────────────────────────────────
# st.sidebar.header("🔍 Filter Complaints")
# boroughs = df["Borough"].dropna().unique().tolist()
# selected_borough = st.sidebar.multiselect("Select Borough(s)", boroughs, default=boroughs)
# 
# min_date = df["Created Date"].min()
# max_date = df["Created Date"].max()
# selected_range = st.sidebar.date_input("Date Range", [min_date, max_date])
# 
# # ─── Apply Filters ───────────────────────────────────────
# filtered_df = df[
#     (df["Borough"].isin(selected_borough)) &
#     (df["Created Date"].dt.date >= selected_range[0]) &
#     (df["Created Date"].dt.date <= selected_range[1])
# ]
# 
# # ─── Complaint Breakdown ─────────────────────────────────
# st.subheader("Complaint Category Breakdown")
# category_counts = filtered_df["label"].value_counts().reset_index()
# category_counts.columns = ["Category", "Count"]
# st.dataframe(category_counts)
# 
# fig1 = px.bar(category_counts, x="Category", y="Count", title="Top Complaint Categories", text="Count")
# st.plotly_chart(fig1, use_container_width=True)
# 
# # ─── Complaint Map ───────────────────────────────────────
# st.subheader("Complaint Locations Map (Filtered Sample)")
# fig2 = px.scatter_mapbox(
#     filtered_df.sample(min(1000, len(filtered_df))),
#     lat="Latitude", lon="Longitude", color="label",
#     hover_data=["Complaint Type", "Descriptor", "Borough"],
#     zoom=10, mapbox_style="carto-positron"
# )
# st.plotly_chart(fig2, use_container_width=True)
#

from google.colab import userdata
from pyngrok import ngrok

# Securely fetch Ngrok token
ngrok_token = userdata.get("ngrok_token")

# Set the token
ngrok.set_auth_token(ngrok_token)

public_url = ngrok.connect(8501)
print("👇 Click to open your Streamlit app:")
print(public_url)

!streamlit run app.py &>/dev/null &